---
- hosts: localhost
  connection: local
  become: false
  gather_facts: true
  vars:
    quay_root: "/opt/quay"
    quay_hostname: "quay:8443"
#    key_name: "ssl.key"
#    key_size: 2048
#    key_type: "RSA"

  tasks:

    - name: Stop Quay service
      systemd:
        name: "{{ item }}"
        state: stopped
      loop:
        - "quay-app.service"
        - "quay-redis.service"
        - "quay-postgres.service"
        - "quay-app.service"

    - name: Change SERVER_HOSTNAME in quay config to current hostname
      ansible.builtin.lineinfile:
        path: "{{ quay_root }}/quay-config/config.yaml"
        regexp: '^SERVER_HOSTNAME:.*'
        line: "SERVER_HOSTNAME: {{ ansible_env.HOSTNAME }}:8443"

#- name: Create necessary directory for Quay local storage
#  ansible.builtin.file:
#    path: "{{ quay_root }}/quay-storage"
#    state: directory
#    recurse: yes
#
#- name: Create necessary directory for Quay config bundle
#  ansible.builtin.file:
#    path: "{{ quay_root }}/quay-config"
#    state: directory
#    recurse: yes
#
#- name: Set permissions on local storage directory
#  ansible.posix.acl:
#    path: "{{ quay_root }}/quay-storage"
#    entry: u:1001:-wx
#    state: present
#
#- name: Copy Quay config.yaml file
#  template:
#    src: ../templates/config.yaml.j2
#    dest: "{{ quay_root }}/quay-config/config.yaml"
#
#- name: Check if SSL Cert exists
#  stat:
#    path: /runner/certs/quay.cert
#  delegate_to: localhost
#  register: ssl_cert
#
#- name: Check if SSL Key exists
#  stat:
#    path: /runner/certs/quay.key
#  delegate_to: localhost
#  register: ssl_key

    - name: Remove existing certs
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - "{{ quay_root }}/quay-config/openssl.cnf"
        - "{{ quay_root }}/quay-config/ssl.cert"
        - "{{ quay_root }}/quay-config/ssl.csr"
        - "{{ quay_root }}/quay-config/ssl.key"
        - "{{ quay_root }}/quay-rootCA/rootCA.pem"
        - "{{ quay_root }}/quay-rootCA/rootCA.srl"
        - "{{ quay_root }}/quay-rootCA/rootCA.key"
      
    - name: Create SSL Certs
      block:
        - name: Create necessary directory for Quay rootCA files
          ansible.builtin.file:
            path: "{{ quay_root }}/quay-rootCA"
            state: directory
            recurse: yes
            
        - name: Create OpenSSL Config
          template:
            src: templates/req.j2
            dest: "{{ quay_root }}/quay-config/openssl.cnf"
    
        - name: Create root CA key
          command: "openssl genrsa -out {{ quay_root }}/quay-rootCA/rootCA.key 2048"
    
        - name: Create root CA pem
          command: "openssl req -x509 -new -config {{ quay_root }}/quay-config/openssl.cnf -nodes -key {{ quay_root }}/quay-rootCA/rootCA.key -sha256 -days 1024 -out {{ quay_root }}/quay-rootCA/rootCA.pem -addext basicConstraints=critical,CA:TRUE,pathlen:1"
    
        - name: Create ssl key
          command: "openssl genrsa -out {{ quay_root }}/quay-config/ssl.key 2048"
    
        - name: Create CSR
          command: "openssl req -new -key {{ quay_root }}/quay-config/ssl.key -out {{ quay_root }}/quay-config/ssl.csr -subj \"/CN=quay-enterprise\" -config {{ quay_root }}/quay-config/openssl.cnf"
    
        - name: Create self-signed cert
          command: "openssl x509 -req -in {{ quay_root }}/quay-config/ssl.csr -CA {{ quay_root }}/quay-rootCA/rootCA.pem -CAkey {{ quay_root }}/quay-rootCA/rootCA.key -CAcreateserial -out {{ quay_root }}/quay-config/ssl.cert -days 356 -extensions v3_req -extfile {{ quay_root }}/quay-config/openssl.cnf"
    
        - name: Create chain cert
          ansible.builtin.shell: cat {{ quay_root }}/quay-config/ssl.cert {{ quay_root }}/quay-rootCA/rootCA.pem > {{ quay_root }}/quay-config/chain.cert
    
        - name: Replace ssl cert with chain cert
          command: mv --force {{ quay_root }}/quay-config/chain.cert {{ quay_root }}/quay-config/ssl.cert

#- name: Copy SSL Certs
#  block:
#    - name: Copy SSL certificate
#      copy:
#        src: /runner/certs/quay.cert
#        dest: "{{ quay_root }}/quay-config/ssl.cert"
#
#    - name: Copy SSL key
#      copy:
#        src: /runner/certs/quay.key
#        dest: "{{ quay_root }}/quay-config/ssl.key"
#  when: (ssl_cert.stat.exists == True) and (ssl_key.stat.exists == True)

    - name: Set certificate permissions
      block:
        - name: Set permissions for key
          ansible.builtin.file:
            path: "{{ quay_root }}/quay-config/ssl.key"
            mode: u=rw,g=r,o=r
            owner: root
            group: root
    
        - name: Set permissions for cert
          ansible.builtin.file:
            path: "{{ quay_root }}/quay-config/ssl.cert"
            mode: u=rw,g=r,o=r
            owner: root
            group: root

    - name: Remove existing certificate copies
      file:
        path: '{{ item }}'
        state: absent
      with_items:
        - '/etc/pki/ca-trust/source/anchors/quay.cert"'
    
    # Make sure to trust the self signed cert we just made
    - name: Copy self signed cert to registry's PKI trust
      become: true
      copy:
        src: "{{ quay_root }}/quay-config/ssl.cert"
        dest: '/etc/pki/ca-trust/source/anchors/quay.cert'
        remote_src: true
    
    - name: update registry trusted ca
      command: update-ca-trust
    
    - name: update registry trusted ca extract
      command: update-ca-trust extract

    - name: Start Quay service
      systemd:
        name: quay-pod.service
        state: started

    - name: Start Quay service
      systemd:
        name: "{{ item }}"
        state: started
      loop:
        - "quay-pod.service"
        - "quay-postgres.service"
        - "quay-redis.service"
        - "quay-app.service"
